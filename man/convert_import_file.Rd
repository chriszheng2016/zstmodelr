% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data-mgt.R
\name{convert_import_file}
\alias{convert_import_file}
\title{Convert a raw importing file through process_fun}
\usage{
convert_import_file(
  input_file,
  input_type = c("csv", "txt"),
  input_dir = NULL,
  start_index = 2L,
  ignore_problems = TRUE,
  log_dir = "./log",
  process_fun = NULL,
  ...,
  output_file = input_file,
  output_type = input_type,
  output_dir = input_dir
)
}
\arguments{
\item{input_file}{A name or a path of input data file.}

\item{input_type}{A character of input file format, e.g. "txt", "csv".}

\item{input_dir}{A path of working dir of input file, if NULL, use dir of
input file as working dir, default NULL.}

\item{start_index}{A integer of start index of first line of actual records
in data file, by default 2L, which means first line is header and actual
data starts from second lines.}

\item{ignore_problems}{A logic flag to determine whether to ignore problems
when covert data, if TRUE, continue to import data but log problems into
log file, otherwise abort reading process.  By default TRUE.}

\item{log_dir}{Path of log dir for saving problem log file,
by default"./log", if the log path doesn't existed, it  will be created.}

\item{process_fun}{A function to process input file into output file.}

\item{...}{Params to process_fun.}

\item{output_file}{A name or a path of input data file.}

\item{output_type}{A character of output file format, e.g. "txt", "csv".}

\item{output_dir}{A path of working dir of output file, if NULL, use dir
of output file as working dir, by default NULL,}
}
\value{
TRUE if success, else FALSE.
}
\description{
convert_import_file is the working horse backing process_files.
}
\details{
Convert a raw importing file into a processed importing file
though three steps:
\enumerate{
\item Read import file into original dataframe by using read_import_file;
\item Process original dataframe into processed dataframe by
using process_fun, like ttm_financial_report;
\item Write processed dataframe into file by using write_import_file.
}
}
\seealso{
Other data management: 
\code{\link{clear_tables}()},
\code{\link{get_datasource}()},
\code{\link{import_table}()},
\code{\link{process_files}()},
\code{\link{read_import_file}()},
\code{\link{ttm_financial_report}()},
\code{\link{update_db}()},
\code{\link{write_import_file}()}
}
\concept{data management}
